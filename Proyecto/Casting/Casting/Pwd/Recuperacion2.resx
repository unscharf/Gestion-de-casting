<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAZdEVYdFNvZnR3YXJlAEFkb2JlIEltYWdlUmVhZHlxyWU8AAAD4UlEQVRYR8VUX2xTZRzlQX0z
        0Qd44s0Hn4zhBYkia9cZnfwJGIgsoi5C1EiCJhijLwLb2NyGW7Y5JpNNAkMUNoXJ1lHmgC5r77rVFcpK
        Sh2gZG13O5o5GSwBcvzOt36x3Nu5po31l5yc/c7d+Z1zk7aLAPyvSCnmEinFXCKlmEukFAkxj+SXdJ+2
        lPTAKiD2xyimMdKXJzyr9thB5k6dD005RkFBzOMMvxDScTYQEcfSLiF9rutT6B+LS+ZOnQ9NOUZBQczi
        PBHqCETx1GddOB/UwV3oC5VYzDfvDU5iWfkFydyp86EpxygoiFnCQPvlCJ7Z48CzJQ70XplIp4Tw2WG/
        MokV+wYkc6fOh6Yco6Awd6gHnf4Ilpf34fnKc1he0Qd7YAKWuYPzlZAFfr48iZW1muSsCnT4Inih2glr
        bT8sNf3y71OXov9WQhY46ddhqR+SnHEBfni+94aRVzuAgno3Xmpww1bnwiqxd4yMz1dCFjjh01HQ6JWc
        VYG24bAI11DY6MGr+z0oFHj5q0HYGjRRLmWJJdSOjugoPHBRcuJ/MitwyBPGK01DWNvsxbokrD4wLPRh
        tLlCM5aSh0rIAoe9Ota2+CVnXMAqDh/UIljTPIL1LT5sSAL3dQd9WP2NDy3O4Izln2+HLNA6HMOGb0cl
        Z1Xgay2M9a2XsPGQH5sMoPZaqx/FPwTRdO7q3fyyMzQuZWDzkI6NR4KSsyrQ6Ipg0+FRbG4LoCgFXj8S
        wLb2EOrPBmYTBZ62isCmwRg2fxeSzJ33eNSUYxQUaGCBelcURUeDeONYEFsMoFZ0LIQ6x+idxM/tcwKi
        QDcaRPCW49ckc+c9HjXlGAUFGlig1qXjzeNjePvEGIqTwP2t9uuo6fvtfuINVwosJRhYp8VR3P675MwL
        COM+VwzvdNzAth8fxtaf/sCXznF1XIXLDyG1GvctbD15U3JWBaoGJvHuqZt4Pxmd46hyhtXhFwVUOEf6
        qt1xvNcZlpxVgS9ccXzQFcZ2BXsU1drUfOEc6at0T2F7d1RyVgUqxIEdPTo+7JnAR44YKgenYd3dNV84
        J1H8T+w4E5OcVYG92jR29t7Cx7/EUeG5vVA4Z87nvi195IwL5AtjmecOPnVOY69nFpaFwznSV6rN4JPz
        U5K5U+dDU45RUKDBJr6G5b8+QJXvASy7TqcTzpG+Mu89fO6elcydOh+acoyCAg0Fpd1/2Urt6kA64Zw5
        n/DwzcncqfOhKccoKIh5QmCZQL4Af+HSCeck+2wJ5k7dnGMUFMQ8mjCx+ZMC6YRzkn0K3Kmbc4yCwn81
        phyjkGukFHOJlGLugEV/A1Xqvv91ti0EAAAAAElFTkSuQmCC
</value>
  </data>
</root>