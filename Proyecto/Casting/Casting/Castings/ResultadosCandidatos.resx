<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        44wJE/4CszxQH15stpIAAAAASUVORK5CYII=
</value>
  </data>
</root>